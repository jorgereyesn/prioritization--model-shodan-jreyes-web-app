{"version":3,"sources":["Layouts/Dashboard/dashboard.styles.jsx","components/bar-vulnerabilities-ip/bar-vulnerabilities-ip.styles.jsx","components/bar-vulnerabilities-ip/bar-vulnerabilities-ip.component.jsx","components/doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.styles.jsx","util.js","components/doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.component.jsx","components/line-years-vulnerabilities/line-vulnerabilities.styles.jsx","components/line-years-vulnerabilities/line-years-vulnerabilities.component.jsx","components/bar-ports/bar-ports.styles.jsx","components/bar-ports/bar-ports.component.jsx","components/bar-tags/bar-tags.styles.jsx","components/bar-tags/bar-tags.component.jsx","Layouts/Dashboard/dashboard.component.jsx","Layouts/ShodanData/shodan-data.styles.jsx","components/ip-information/ip-information.styles.jsx","components/cve-details/cve-details.styles.jsx","components/modal-references-cve/references-cve.component.jsx","components/cve-details/cve-details.component.jsx","components/ip-banner/ip-banner.styles.jsx","components/modal-ip-vulns-cvss/modal-ip-vulns-cvss.component.jsx","components/ip-banner/ip-banner.component.jsx","components/ip-information/ip-information.component.jsx","Layouts/ShodanData/shodan-data.component.jsx","Pages/MainPage/main-page.styles.jsx","components/export-excel/export-excel.styles.jsx","components/export-excel/ExportReactCSV.js","Layouts/PriorityAtention/priority-atention.styles.jsx","Layouts/PriorityAtention/priority-atention.component.jsx","Pages/MainPage/main-page.component.jsx","components/rest-api/extract-data.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/footer/footer.styles.jsx","components/footer/footer.component.jsx","App.js","index.js"],"names":["Wrapper","styled","div","Container","BarVulnerabilitiesIpComponent","info","state","labels","map","item","vuln","ip_str","datasets","label","backgroundColor","borderColor","data","length","borderWidth","options","indexAxis","scales","x","ticks","color","grid","offset","y","plugins","title","display","text","font","size","padding","legend","position","boxWidth","type","extractRepeatVariables","reduce","acc","includes","push","groupRepeatVariables","finalData","variable","countRepeatVariables","variables","array","count","finalCount","i","j","numberVulnerabilitiesCVSS","none","low","medium","high","critical","cvss","sumData","a","b","averageOrganizationalRisk","totalVuln","toFixed","DoughnutVulnerabilitiesCvssComponent","singleIp","sumVulnerabilitiesCVSS","LineYearsVulnerabilitiesComponent","years","item1","cve","substr","sort","BarPorts","ports","BarTags","tags","DashboardComponent","Grid","container","spacing","justifyContent","md","Accord","Accordion","AccordionDet","AccordionDetails","AccordionSum","AccordionSummary","CveGrid","Cve","References","Cvss","props","textcolor","Summary","Link","useStyles","makeStyles","theme","modal","alignItems","paper","border","boxShadow","shadows","maxHeight","overflow","ReferencesCveComponent","buttonName","references","classes","React","useState","open","setOpen","Button","onClick","variant","Modal","aria-labelledby","aria-describedby","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","index","href","target","rel","CveDetailsComponent","summary","textColor","xs","DataGridContainer","DataGrid","Ip","h2","Tags","strong","ModalIpVulnsCvssComponent","IpBannerComponent","ip","numVulns","org","isp","lastUpdate","country","city","asn","hostnames","domains","IpInformationComponent","ShodanDataComponent","vulns","last_update","country_name","Title","Description","p","Line","hr","DescriptionVariables","Variable","h3","InfoContainerRisk","InfoContainer","GridContainer","Loading","Message","ExportButton","button","ExportReactCSV","csvData","fileName","filename","ButtonContainer","PriorityAtentionComponent","sum","totalVulns","allCVSS","AVT","currentYear","Date","getFullYear","ART","average","averageRemediationTime","poe","openPorts","totalPorts","popI","pqt","tr","ep","console","log","po","impact","rf","riskFactor","key","orden","dataVuln","rows","id","risk","createData","Paper","sx","width","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","style","minWidth","TableBody","name","component","scope","MainPageComponent","ips","result","extractDataShow","setVuln","setData","useEffect","fetch","then","res","json","local","val","val1","k","extractVulns","error","ExtractData","total","AOR","colorRisk","loading","setLoading","setTimeout","Header","AppBar","Navigation","nav","CustomLinkNav","ImageContainer","Image","img","to","spy","smooth","src","alt","Footer","footer","Content","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94ef65f0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: rgba(189, 203, 217);\r\n  //background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  padding: 2em;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport * as S from \"./bar-vulnerabilities-ip.styles\";\n\nconst BarVulnerabilitiesIpComponent = ({ info }) => {\n  const state = {\n    labels: info.map((item) => item.vuln.ip_str),\n    datasets: [\n      {\n        label: \"Vulnerabilities\",\n        backgroundColor: \"black\",\n        borderColor: info.map((item) =>\n          item.data.length > 100\n            ? \"red\"\n            : item.data.length > 50\n            ? \"yellow\"\n            : \"rgba(116, 238, 63)\"\n        ),\n        borderWidth: 2,\n        data: info.map((item) => item.data.length),\n      },\n    ],\n  };\n\n  const config = {\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n      y: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: \"Number of vulnerabilities per IP\",\n        font: {\n          size: 20,\n        },\n        padding: 20,\n        color: \"black\",\n      },\n      legend: {\n        display: false,\n        position: \"top\",\n        labels: {\n          color: \"white\",\n          boxWidth: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <S.Wrapper>\n      <Bar data={state} options={config} type=\"\" />\n    </S.Wrapper>\n  );\n};\n\nexport default BarVulnerabilitiesIpComponent;\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","//Extrae las vulnerabilidades encontrada dentro de toda la info arrojada por la API\r\nexport const extractVulns = (data, vulns) => {\r\n  var val = [];\r\n  var val1 = [];\r\n  var count = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (typeof data[i].vulns != \"undefined\") {\r\n      val.push(data[i].vulns);\r\n    }\r\n  }\r\n  // console.log(Object.keys(val[0]));\r\n  for (let k = 0; k < vulns.length; k++) {\r\n    count = 0;\r\n    // console.log(vulns[k]);\r\n    for (let j = 0; j < val.length; j++) {\r\n      if (typeof val[j][vulns[k]] != \"undefined\") {\r\n        if (vulns[k].index === val[j][vulns[k]].index && count < 1) {\r\n          // console.log(val[j][vulns[k]]);\r\n          val[j][vulns[k]].cve = vulns[k];\r\n          val1.push(val[j][vulns[k]]);\r\n          count++;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // console.log(val1.length);\r\n  return val1;\r\n};\r\n\r\n//Extrae solo una coincidencia de las variables repetidas\r\nexport const extractRepeatVariables = (data) => {\r\n  return data.reduce((acc, item) => {\r\n    if (!acc.includes(item)) {\r\n      acc.push(item);\r\n    }\r\n    return acc;\r\n  }, []);\r\n};\r\n\r\n//Agrupa todos las variables de un json en un solo array\r\nexport const groupRepeatVariables = (data) => {\r\n  const finalData = [];\r\n  data?.map((item) => item?.map((variable) => finalData.push(variable)));\r\n  return finalData;\r\n};\r\n\r\n//Cuenta las coincidencias dentro de un array, en base a las variables identificadas\r\nexport const countRepeatVariables = (variables, array) => {\r\n  let count;\r\n  const finalCount = [];\r\n  for (let i = 0; i < variables.length; i++) {\r\n    count = 0;\r\n    for (let j = 0; j < array.length; j++) {\r\n      if (variables[i] === array[j]) {\r\n        count = count + 1;\r\n      }\r\n    }\r\n    finalCount.push(count);\r\n  }\r\n  return finalCount;\r\n};\r\n\r\n//Cuenta las coincidencias de vulnerabilidades de acuerdo al rango CVSS\r\nexport const numberVulnerabilitiesCVSS = (info) => {\r\n  let none = 0;\r\n  let low = 0;\r\n  let medium = 0;\r\n  let high = 0;\r\n  let critical = 0;\r\n\r\n  for (let i = 0; i < info.length; i++) {\r\n    if (\r\n      info[i].cvss === 0 ||\r\n      info[i].cvss === \"\" ||\r\n      info[i].cvss === \"undefined\"\r\n    ) {\r\n      none++;\r\n    }\r\n    if (info[i].cvss > 0 && info[i].cvss < 4) {\r\n      low++;\r\n    }\r\n    if (info[i].cvss > 3.9 && info[i].cvss < 7) {\r\n      medium++;\r\n    }\r\n    if (info[i].cvss > 6.9 && info[i].cvss < 9) {\r\n      high++;\r\n    }\r\n    if (info[i].cvss > 8.9 && info[i].cvss < 11) {\r\n      critical++;\r\n    }\r\n    // console.log(none, low, medium);\r\n  }\r\n  return [none, low, medium, high, critical];\r\n};\r\n\r\n//Suma la cantidad de vulnerabilidades correspondientes al rango CVSS\r\nexport const sumVulnerabilitiesCVSS = (data) => {\r\n  let none = 0;\r\n  let low = 0;\r\n  let medium = 0;\r\n  let high = 0;\r\n  let critical = 0;\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    none += data[i][0];\r\n    low += data[i][1];\r\n    medium += data[i][2];\r\n    high += data[i][3];\r\n    critical += data[i][4];\r\n  }\r\n  return [none, low, medium, high, critical];\r\n};\r\n\r\n//Suma de valores dentro de un array\r\nexport const sumData = (data) => {\r\n  return data.reduce((a, b) => a + b, 0);\r\n};\r\n\r\n//Promedio de riesgo organizacional\r\nexport const averageOrganizationalRisk = (data, totalVuln) => {\r\n  return (data / totalVuln).toFixed(2);\r\n};\r\n\r\n//Promedio de nivel de remediacion\r\nexport const averageRemediationTime = (years, totalVuln) => {\r\n  const today = new Date();\r\n  const currentYear = today.getFullYear();\r\n  years = years?.map((item) => (currentYear - item) * 365);\r\n  const average = (sumData(years) / totalVuln).toFixed(2) * 1;\r\n  // console.log(average);\r\n  // const average = 130;\r\n  let ART;\r\n  if (average >= 280) ART = 1;\r\n  else if (average >= 140 && average < 280) ART = 0.5;\r\n  else if (average < 140) ART = 0.1;\r\n  return ART;\r\n};\r\n\r\nexport const riskFactor = (info, AVT) => {\r\n  console.log(info);\r\n  for (let i = 0; i < info?.length; i++) {\r\n    info[i].vuln.poe = info[i].vuln.poe * 1;\r\n    info[i].vuln.popI = info[i].vuln.popI * 1;\r\n    info[i].vuln.pqt = info[i].vuln.pqt * 1;\r\n    for (let j = 0; j < info[i]?.data?.length; j++) {\r\n      info[i].data[j].poe = info[i].vuln.poe * 1;\r\n      info[i].data[j].popI = info[i].vuln.popI * 1;\r\n      info[i].data[j].pqt = info[i].vuln.pqt * 1;\r\n      info[i].data[j].cvss = info[i].data[j].cvss * 1;\r\n      info[i].data[j].tr = info[i].data[j].tr * 1;\r\n      info[i].data[j].po =\r\n        (\r\n          ((info[i].data[j].tr + info[i].data[j].ep) / 2) *\r\n          ((info[i].vuln.poe + info[i].vuln.popI + info[i].vuln.pqt) / 3) *\r\n          AVT\r\n        ).toFixed(2) * 1;\r\n\r\n      info[i].data[j].impact = info[i].data[j].cvss / 10;\r\n\r\n      info[i].data[j].rf =\r\n        (info[i].data[j].po * info[i].data[j].impact).toFixed(2) * 1;\r\n      info[i].data[j].ip = info[i].vuln.ip_str;\r\n    }\r\n  }\r\n  return info;\r\n};\r\n\r\nexport const sortJSON = (data, key, orden) => {\r\n  // eslint-disable-next-line array-callback-return\r\n  return data.sort(function (a, b) {\r\n    const x = a[key],\r\n      y = b[key];\r\n\r\n    if (orden === \"asc\") {\r\n      return x < y ? -1 : x > y ? 1 : 0;\r\n    }\r\n\r\n    if (orden === \"desc\") {\r\n      return x > y ? -1 : x < y ? 1 : 0;\r\n    }\r\n  });\r\n};\r\n\r\n//Extraer solo resultados con vulnerabilidades\r\nexport const extractDataShow = (data) => {\r\n  const result = [];\r\n  for (let i = 0; i < data?.length; i++) {\r\n    if (data[i]?.data?.length > 1) {\r\n      // console.log(data[i].data.length);\r\n      result.push(data[i]);\r\n    }\r\n  }\r\n  // console.log(result);\r\n  return result;\r\n};\r\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport * as S from \"./doughnut-vulnerabilities-cvss.styles\";\nimport { numberVulnerabilitiesCVSS, sumVulnerabilitiesCVSS } from \"../../util\";\n\nconst DoughnutVulnerabilitiesCvssComponent = ({ info, singleIp }) => {\n  let sum;\n  let data;\n  if (singleIp) {\n    //FUNCIONA PARA IP INDIVIDUAL\n    sum = numberVulnerabilitiesCVSS(info);\n  } else {\n    //FUNCIONA PARA MULTIPLES IP\n    data = info.map((item) => numberVulnerabilitiesCVSS(item.data));\n    sum = sumVulnerabilitiesCVSS(data);\n  }\n\n  const color = [\n    \"rgba(255, 255, 255)\",\n    \"rgba(116, 238, 63)\",\n    \"rgba(234, 231, 46)\",\n    \"rgba(237, 45, 19)\",\n    \"rgba(63, 62, 62)\",\n  ];\n  const state = {\n    labels: [\"None\", \"Low\", \"Medium\", \"High\", \"Critical\"],\n    datasets: [\n      {\n        label: \"CVSS Score\",\n        backgroundColor: color,\n        borderColor: \"black\",\n        borderWidth: 2,\n        data: sum,\n      },\n    ],\n  };\n  const config = {\n    indexAxis: \"y\",\n    scales: {\n      x: {\n        ticks: {\n          color: \"black\",\n          display: false,\n        },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n      y: {\n        ticks: {\n          color: \"black\",\n          display: false,\n        },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: \"Common Vulnerability Scoring System\",\n        position: \"top\",\n        font: {\n          size: 20,\n        },\n        padding: 20,\n        color: \"black\",\n      },\n      legend: {\n        display: true,\n        position: \"left\",\n        labels: {\n          color: \"black\",\n          boxWidth: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <S.Wrapper>\n      <Doughnut data={state} options={config} type=\"\" />\n    </S.Wrapper>\n  );\n};\n\nexport default DoughnutVulnerabilitiesCvssComponent;\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport * as S from \"./line-vulnerabilities.styles\";\nimport {\n  countRepeatVariables,\n  extractRepeatVariables,\n  groupRepeatVariables,\n} from \"../../util\";\n\nconst LineYearsVulnerabilitiesComponent = ({ info }) => {\n  const years = info.map((item) =>\n    item.data.map((item1) => item1.cve.substr(4, 4))\n  );\n  const labels = extractRepeatVariables(groupRepeatVariables(years)).sort();\n  const data = countRepeatVariables(labels, groupRepeatVariables(years));\n  const state = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Vulnerabilities\",\n        backgroundColor: data.map((item) =>\n          item > 100 ? \"red\" : item > 50 ? \"yellow\" : \"rgba(116, 238, 63)\"\n        ),\n        borderColor: \"black\",\n        borderWidth: 2,\n        data: data,\n      },\n    ],\n  };\n\n  const config = {\n    indexAxis: \"x\",\n    scales: {\n      x: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n      y: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: \"Reference years in CVE-ID\",\n        font: {\n          size: 20,\n        },\n        padding: 20,\n        color: \"black\",\n      },\n      legend: {\n        display: false,\n        position: \"top\",\n        labels: {\n          color: \"black\",\n          boxWidth: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <S.Wrapper>\n      <Line data={state} options={config} type=\"\" />\n    </S.Wrapper>\n  );\n};\n\nexport default LineYearsVulnerabilitiesComponent;\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport * as S from \"./bar-ports.styles\";\nimport {\n  countRepeatVariables,\n  extractRepeatVariables,\n  groupRepeatVariables,\n} from \"../../util\";\n\nconst BarPorts = ({ info }) => {\n  let ports;\n  ports = info?.map((item) => item?.vuln?.ports?.map((item1) => item1));\n  const labels = extractRepeatVariables(groupRepeatVariables(ports));\n  const data = countRepeatVariables(labels, groupRepeatVariables(ports));\n  const state = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"IPs\",\n        backgroundColor: \"black\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderWidth: 2,\n        data: data,\n      },\n    ],\n  };\n\n  const config = {\n    indexAxis: \"x\",\n    scales: {\n      x: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n      y: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: \"Open Ports\",\n        font: {\n          size: 20,\n        },\n        padding: 20,\n        color: \"black\",\n      },\n      legend: {\n        display: false,\n        position: \"top\",\n        labels: {\n          color: \"black\",\n          boxWidth: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <S.Wrapper>\n      <Bar data={state} options={config} type=\"\" />\n    </S.Wrapper>\n  );\n};\n\nexport default BarPorts;\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  width: 100%;\r\n`;\r\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport * as S from \"./bar-tags.styles\";\nimport {\n  countRepeatVariables,\n  extractRepeatVariables,\n  groupRepeatVariables,\n} from \"../../util\";\n\nconst BarTags = ({ info }) => {\n  const tags = info?.map((item) => item?.vuln?.tags?.map((item1) => item1));\n  const labels = extractRepeatVariables(groupRepeatVariables(tags));\n  const data = countRepeatVariables(labels, groupRepeatVariables(tags));\n  const state = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"IPs\",\n        backgroundColor: \"black\",\n        borderColor: \"rgba(75,192,192,1)\",\n        borderWidth: 2,\n        data: data,\n      },\n    ],\n  };\n\n  const config = {\n    indexAxis: \"x\",\n    scales: {\n      x: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n      y: {\n        ticks: { color: \"black\" },\n        grid: {\n          offset: false,\n          color: \"black\",\n        },\n      },\n    },\n    plugins: {\n      title: {\n        display: true,\n        text: \"Query Tags\",\n        font: {\n          size: 20,\n        },\n        padding: 20,\n        color: \"black\",\n      },\n      legend: {\n        display: false,\n        position: \"top\",\n        labels: {\n          color: \"black\",\n          boxWidth: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <S.Wrapper>\n      <Bar data={state} options={config} type=\"\" />\n    </S.Wrapper>\n  );\n};\n\nexport default BarTags;\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport * as S from \"./dashboard.styles\";\r\nimport BarVulnerabilitiesIpComponent from \"../../components/bar-vulnerabilities-ip/bar-vulnerabilities-ip.component\";\r\nimport DoughnutVulnerabilitiesCvssComponen from \"../../components/doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.component\";\r\nimport LineYearsVulnerabilitiesComponent from \"../../components/line-years-vulnerabilities/line-years-vulnerabilities.component\";\r\nimport BarPorts from \"../../components/bar-ports/bar-ports.component\";\r\nimport BarTags from \"../../components/bar-tags/bar-tags.component\";\r\n\r\nconst DashboardComponent = ({ info }) => {\r\n  return (\r\n    <S.Wrapper>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        <Grid item md={6}>\r\n          <BarVulnerabilitiesIpComponent info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <BarPorts info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <LineYearsVulnerabilitiesComponent info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <BarTags info={info} />\r\n        </Grid>\r\n        <Grid item md={6}>\r\n          <DoughnutVulnerabilitiesCvssComponen info={info} singleIp={false} />\r\n        </Grid>\r\n      </Grid>\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default DashboardComponent;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: #17202a;\r\n  background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  //height: 50em;\r\n  color: white;\r\n  text-align: center;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\n\r\nexport const Accord = styled(Accordion)`\r\n  //background-color: #17202a;\r\n  background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  //color: white;\r\n`;\r\n\r\nexport const AccordionDet = styled(AccordionDetails)`\r\n  background-color: black;\r\n`;\r\n\r\nexport const AccordionSum = styled(AccordionSummary)``;\r\n","import styled from \"styled-components\";\r\nimport { Container, Grid } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  color: white;\r\n  border: 2px solid white;\r\n  text-align: center;\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const CveGrid = styled(Grid)``;\r\n\r\nexport const Cve = styled(Grid)`\r\n  border: 1px solid black;\r\n`;\r\nexport const References = styled(Grid)`\r\n  border: 1px solid black;\r\n`;\r\nexport const Cvss = styled(Grid)`\r\n  background-color: ${(props) => props.color};\r\n  color: ${(props) => props.textcolor};\r\n  border: 1px solid black;\r\n`;\r\nexport const Summary = styled(Grid)`\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: white;\r\n  background-color: rgba(116, 238, 63, 0.3);\r\n  padding: 0.2em;\r\n  font-size: 0.9em;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin-right: 0.3em;\r\n  margin-bottom: 0.3em;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background-color: rgba(116, 238, 63, 0.5);\r\n    font-weight: 500;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"#E3DFDF\",\r\n    border: \"3px solid #66FA00\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    maxHeight: \"70%\",\r\n    overflow: \"scroll\",\r\n  },\r\n}));\r\n\r\nexport default function ReferencesCveComponent({ buttonName, references }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color={\"secondary\"} onClick={handleOpen} variant=\"outlined\">\r\n        {buttonName}\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            {references.map((item, index) => (\r\n              <p>\r\n                <a\r\n                  key={index + item}\r\n                  href={item}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  {item}{\" \"}\r\n                </a>\r\n              </p>\r\n            ))}\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as S from \"./cve-details.styles\";\r\nimport TransitionsModal from \"../modal-references-cve/references-cve.component\";\r\n\r\nconst CveDetailsComponent = ({ cve, references, cvss, summary }) => {\r\n  let color = \"\";\r\n  let textColor = \"black\";\r\n\r\n  if (cvss > 0 && cvss < 4) {\r\n    color = \"green\";\r\n    textColor = \"white\";\r\n  }\r\n\r\n  if (cvss > 3.9 && cvss < 7) {\r\n    color = \"yellow\";\r\n  }\r\n  if (cvss > 6.9 && cvss < 9) {\r\n    color = \"red\";\r\n    textColor = \"white\";\r\n  }\r\n  if (cvss > 8.9 && cvss < 11) {\r\n    color = \"#34495E\";\r\n    textColor = \"white\";\r\n  }\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.CveGrid container justifyContent=\"center\" alignItems=\"center\">\r\n        <S.Cve item xs={3}>\r\n          <S.Link\r\n            href={`https://nvd.nist.gov/vuln/detail/` + cve}\r\n            target=\"_blank\"\r\n          >\r\n            {cve}\r\n          </S.Link>\r\n        </S.Cve>\r\n        <S.References item xs={3}>\r\n          <TransitionsModal\r\n            buttonName=\"Solution Links\"\r\n            references={references}\r\n          />\r\n        </S.References>\r\n        <S.Cvss item xs={3} color={color} textcolor={textColor}>\r\n          {cvss}\r\n        </S.Cvss>\r\n        <S.Summary item xs={12}>\r\n          {summary}\r\n        </S.Summary>\r\n      </S.CveGrid>\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default CveDetailsComponent;\r\n","import styled from \"styled-components\";\r\n\r\nimport { Container, Grid } from \"@material-ui/core\";\r\n\r\nexport const Wrapper = styled(Container)`\r\n  background-color: #17202a;\r\n  background-image: -webkit-linear-gradient(30deg, #34495e 50%, #212f3d 50%);\r\n  color: white;\r\n  border: 2px solid white;\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const DataGridContainer = styled(Grid)`\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n`;\r\nexport const DataGrid = styled(Grid)`\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n`;\r\nexport const Ip = styled.h2``;\r\n\r\nexport const Tags = styled.strong`\r\n  color: white;\r\n  background-color: rgba(116, 238, 63, 0.3);\r\n  padding: 0.2em;\r\n  font-size: 0.9em;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin-right: 0.3em;\r\n  margin-bottom: 0.3em;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n  color: white;\r\n  background-color: rgba(116, 238, 63, 0.3);\r\n  padding: 0.2em;\r\n  font-size: 0.9em;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin-right: 0.3em;\r\n  margin-bottom: 0.3em;\r\n  border-radius: 5px;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background-color: rgba(116, 238, 63, 0.5);\r\n    font-weight: 500;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport DoughnutVulnerabilitiesCvssComponent from \"../doughnut-vulnerabilities-cvss/doughnut-vulnerabilities-cvss.component\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  paper: {\r\n    backgroundColor: \"rgba(189, 203, 217)\",\r\n    border: \"2px solid red\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function ModalIpVulnsCvssComponent({ buttonName, info }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button\r\n        color={\"inherit\"}\r\n        onClick={handleOpen}\r\n        variant=\"outlined\"\r\n        display=\"none\"\r\n      >\r\n        {buttonName}\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <DoughnutVulnerabilitiesCvssComponent info={info} singleIp={true} />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport * as S from \"./ip-banner.styles\";\nimport ModalIpVulnsCvssComponent from \"../modal-ip-vulns-cvss/modal-ip-vulns-cvss.component\";\n\nconst IpBannerComponent = ({\n  ip,\n  numVulns,\n  org,\n  isp,\n  data,\n  lastUpdate,\n  country,\n  city,\n  asn,\n  tags,\n  ports,\n  hostnames,\n  domains,\n}) => {\n  let text = \"\";\n  if (numVulns > 0) {\n    text = `${numVulns} vulnerabilities have been detected`;\n  } else {\n    text = \"No vulnerabilities have been detected\";\n  }\n  // console.log(tags);\n  return (\n    <S.Wrapper>\n      <S.DataGridContainer\n        container\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={3}\n      >\n        <S.DataGrid item xs={3}>\n          <S.Ip>IP: {ip}</S.Ip>\n        </S.DataGrid>\n        <S.DataGrid item xs={3}>\n          {text}\n        </S.DataGrid>\n        <S.DataGrid item xs={3}>\n          ORG: {org}\n        </S.DataGrid>\n        <S.DataGrid item xs={3}>\n          ISP: {isp}\n        </S.DataGrid>\n        <S.DataGrid item xs={3}>\n          Last_Update: {lastUpdate}\n        </S.DataGrid>\n        <S.DataGrid item xs={3}>\n          Location: {country} - {city}\n        </S.DataGrid>\n        <S.DataGrid item xs={3}>\n          ASN: {asn}\n        </S.DataGrid>\n        {tags && (\n          <S.DataGrid item xs={3}>\n            Tags:{\" \"}\n            {tags.map((item, index) => (\n              <S.Tags key={item + index}>{item}</S.Tags>\n            ))}\n          </S.DataGrid>\n        )}\n        {ports && (\n          <S.DataGrid item xs={3}>\n            Ports:{\" \"}\n            {ports.map((item, index) => (\n              <S.Link\n                href={`https://` + ip + \":\" + item}\n                target=\"_blank\"\n                key={item + index}\n              >\n                {item}\n              </S.Link>\n              // <S.Tags>{item}</S.Tags>\n            ))}\n          </S.DataGrid>\n        )}\n        {hostnames && (\n          <S.DataGrid item xs={3}>\n            Hostnames:{\" \"}\n            {hostnames.map((item, index) => (\n              <S.Link\n                href={`https://` + item}\n                target=\"_blank\"\n                key={item + index}\n              >\n                {item}\n              </S.Link>\n            ))}\n          </S.DataGrid>\n        )}\n        {domains && (\n          <S.DataGrid item xs={3}>\n            Domain: {domains.map((item) => item)}\n          </S.DataGrid>\n        )}\n        {numVulns > 0 && (\n          <S.DataGrid item xs={3}>\n            <ModalIpVulnsCvssComponent\n              info={data}\n              buttonName=\"RESUMEN CVSS +\"\n            />\n          </S.DataGrid>\n        )}\n      </S.DataGridContainer>\n    </S.Wrapper>\n  );\n};\n\nexport default IpBannerComponent;\n","import React from \"react\";\r\nimport * as S from \"./ip-information.styles\";\r\nimport CveDetailsComponent from \"../cve-details/cve-details.component\";\r\nimport IpBannerComponent from \"../ip-banner/ip-banner.component\";\r\n\r\nconst IpInformationComponent = ({\r\n  ip,\r\n  data,\r\n  org,\r\n  isp,\r\n  lastUpdate,\r\n  country,\r\n  city,\r\n  asn,\r\n  tags,\r\n  ports,\r\n  hostnames,\r\n  domains,\r\n}) => {\r\n  return (\r\n    <S.Accord>\r\n      <S.AccordionSum>\r\n        <IpBannerComponent\r\n          ip={ip}\r\n          numVulns={data.length}\r\n          org={org}\r\n          isp={isp}\r\n          data={data}\r\n          lastUpdate={`${lastUpdate?.substr(0, 10)} ${lastUpdate?.substr(\r\n            11,\r\n            8\r\n          )}`}\r\n          country={country}\r\n          city={city}\r\n          asn={asn}\r\n          tags={tags}\r\n          ports={ports}\r\n          hostnames={hostnames}\r\n          domains={domains}\r\n        />\r\n      </S.AccordionSum>\r\n      {data.map((item, index) => (\r\n        <S.AccordionDet key={`SHdata-${ip}` + index}>\r\n          <CveDetailsComponent\r\n            cve={item.cve}\r\n            cvss={item.cvss}\r\n            summary={item.summary}\r\n            references={item.references}\r\n          />\r\n        </S.AccordionDet>\r\n      ))}\r\n    </S.Accord>\r\n  );\r\n};\r\n\r\nexport default IpInformationComponent;\r\n","import React from \"react\";\r\nimport * as S from \"./shodan-data.styles\";\r\nimport IpInformationComponent from \"../../components/ip-information/ip-information.component\";\r\n\r\nconst ShodanDataComponent = ({ info }) => {\r\n  return (\r\n    <S.Wrapper>\r\n      {info.map((item, index) =>\r\n        typeof item.vuln.vulns != \"undefined\" ? (\r\n          <>\r\n            <IpInformationComponent\r\n              key={`sh` - index - item.vuln.ip_str}\r\n              ip={item.vuln.ip_str}\r\n              data={item.data}\r\n              org={item.vuln.org}\r\n              isp={item.vuln.isp}\r\n              lastUpdate={item.vuln.last_update}\r\n              country={item.vuln.country_name}\r\n              city={item.vuln.city}\r\n              asn={item.vuln.asn}\r\n              tags={item.vuln.tags}\r\n              ports={item.vuln.ports}\r\n              hostnames={item.vuln.hostnames}\r\n              domains={item.vuln.domains}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <IpInformationComponent\r\n              key={`shSV` - index - item.vuln.ip_str}\r\n              ip={item.vuln.ip_str}\r\n              data={[]}\r\n              org={item.vuln.org}\r\n              isp={item.vuln.isp}\r\n              lastUpdate={item.vuln.last_update}\r\n              country={item.vuln.country_name}\r\n              city={item.vuln.city}\r\n              asn={item.vuln.asn}\r\n              tags={item.vuln.tags}\r\n              ports={item.vuln.ports}\r\n              hostnames={item.vuln.hostnames}\r\n              domains={item.vuln.domains}\r\n            />\r\n          </>\r\n        )\r\n      )}\r\n    </S.Wrapper>\r\n  );\r\n};\r\nexport default ShodanDataComponent;\r\n","import styled from \"styled-components\";\nimport { Grid } from \"@material-ui/core\";\nexport const Wrapper = styled.div`\n  padding-top: 100px;\n  background-color: rgba(189, 203, 217);\n`;\nexport const Title = styled.h2`\n  margin: 0;\n  padding: 0.5em;\n  background-color: black;\n  color: white;\n  text-align: center;\n`;\nexport const Description = styled.p`\n  margin: 0;\n  padding: 0.5em;\n  background-color: black;\n  color: white;\n  text-align: right;\n  font-size: 1.8em;\n  font-weight: 500;\n`;\n\nexport const Line = styled.hr`\n  border: 4px solid green;\n  margin: 0;\n`;\n\nexport const DescriptionVariables = styled.p`\n  color: black;\n  background-color: rgba(116, 238, 63, 0.5);\n  border-radius: 10px;\n  margin: 0;\n  padding: 0.5em;\n  text-align: left;\n  font-size: 1.2em;\n`;\n\nexport const Variable = styled.h3`\n  color: ${(props) => props.color ?? \"white\"};\n  padding: 1em;\n`;\nexport const InfoContainerRisk = styled.div`\n  background-color: ${(props) => props.color};\n  height: 100%;\n`;\nexport const InfoContainer = styled.div`\n  background-color: black;\n  height: 100%;\n`;\n\nexport const GridContainer = styled(Grid)`\n  padding: 2em;\n`;\n\nexport const Loading = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 15em;\n  padding-bottom: 15em;\n`;\n\nexport const Message = styled.h2`\n  color: #7ed321;\n  font-size: 30px;\n`;\n","import styled from \"styled-components\";\n\nexport const ExportButton = styled.button`\n  color: white;\n  background-color: rgba(116, 238, 63, 0.3);\n  padding: 1em;\n  font-size: 0.9em;\n  display: inline-block;\n  text-align: center;\n  margin-right: 0.3em;\n  margin-bottom: 0.3em;\n  border-radius: 5px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: rgba(116, 238, 63, 0.5);\n    font-weight: 500;\n  }\n`;\n","import React from \"react\";\nimport { CSVLink } from \"react-csv\";\nimport { ExportButton } from \"./export-excel.styles\";\n\nexport const ExportReactCSV = ({ csvData, fileName }) => {\n  return (\n    <ExportButton variant=\"warning\">\n      <CSVLink data={csvData} filename={fileName}>\n        Export\n      </CSVLink>\n    </ExportButton>\n  );\n};\n","import styled from \"styled-components\";\nexport const ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {\n  averageOrganizationalRisk,\n  averageRemediationTime,\n  extractRepeatVariables,\n  groupRepeatVariables,\n  riskFactor,\n  sortJSON,\n  sumData,\n} from \"../../util\";\nimport { Paper } from \"@material-ui/core\";\nimport { ExportReactCSV } from \"../../components/export-excel/ExportReactCSV\";\nimport { ButtonContainer } from \"./priority-atention.styles\";\n\n// const StyledTableCell = withStyles((theme) => ({\n//   head: {\n//     backgroundColor: theme.palette.common.black,\n//     color: theme.palette.common.white,\n//     position: \"sticky\",\n//   },\n//   body: {\n//     fontSize: 14,\n//   },\n// }))(TableCell);\n\n// const StyledTableRow = withStyles((theme) => ({\n//   root: {\n//     backgroundColor: \"rgba(189,203,217)\",\n//   },\n// }))(TableRow);\n\nfunction createData(id, ip, cve, cvss, tr, ep, poe, popI, pqt, risk) {\n  return { id, ip, cve, cvss, tr, ep, poe, popI, pqt, risk };\n}\n\n// const useStyles = makeStyles({\n//   table: {\n//     minWidth: 700,\n//   },\n// });\n\nconst PriorityAtentionComponent = ({ info }) => {\n  //GLOBAL VARIABLES\n  const sum = info.map((item) => item.data.length);\n  const totalVulns = sumData(sum);\n\n  const allCVSS = groupRepeatVariables(\n    info?.map((item) => item?.data?.map((data) => data.cvss * 1))\n  );\n  const AOR = averageOrganizationalRisk(sumData(allCVSS), totalVulns);\n  // console.log(AOR);\n\n  const years = groupRepeatVariables(\n    info.map((item) => item?.data?.map((item1) => item1?.cve?.substr(4, 4) * 1))\n  );\n  const AVT = averageRemediationTime(years, totalVulns);\n\n  //IP VARIABLES\n  //Probability of Occurrence of an Event in the IP (POE)\n  info?.map(\n    (item) =>\n      (item.vuln.poe = ((item?.data?.length * 1) / totalVulns).toFixed(2))\n  );\n  //Probability of Open Ports (POP)\n  const openPorts = info.map((item) => item?.vuln?.ports);\n  const totalPorts = extractRepeatVariables(groupRepeatVariables(openPorts));\n  info?.map(\n    (item) =>\n      (item.vuln.popI =\n        item?.vuln?.ports?.length * 1 >= 10\n          ? 1\n          : ((item?.vuln?.ports?.length * 1) / totalPorts.length).toFixed(2))\n  );\n\n  //Query Tags (QT)\n  info?.map(\n    (item) => (item.vuln.pqt = item?.vuln?.tags?.length * 1 > 0 ? 1 : 0)\n  );\n\n  //VULNERABILITY VARIABLES\n  //Total References (TR)\n  info?.map((item) =>\n    item?.data?.map(\n      (variable) =>\n        (variable.tr =\n          variable?.references?.length > 10\n            ? 1\n            : (variable?.references?.length / 10).toFixed(2))\n    )\n  );\n\n  //Exploitation Probability (EP)\n  info?.map((item) =>\n    item?.data?.map(\n      (variable) =>\n        (variable.ep =\n          variable?.cvss * 1 >= 7\n            ? 1\n            : variable?.cvss * 1 >= 4 && variable?.cvss * 1 < 7\n            ? 0.5\n            : 0.1)\n    )\n  );\n\n  //RISK FACTOR\n  info = riskFactor(info, AVT, AOR);\n  const dataVuln = sortJSON(\n    groupRepeatVariables(\n      info?.map((item) => item?.data?.map((item1) => item1))\n    ),\n    \"rf\",\n    \"desc\"\n  );\n  console.log(info);\n\n  // const classes = useStyles();\n  const rows = [];\n  dataVuln?.map(({ ip, cve, cvss, tr, ep, poe, popI, pqt, rf }, index) =>\n    rows.push(\n      createData(\n        `ESP-vuln-` + (index + 1) + `-` + cve,\n        ip,\n        cve,\n        cvss,\n        tr,\n        ep,\n        poe,\n        popI,\n        pqt,\n        rf\n      )\n    )\n  );\n  // console.log(rows);\n\n  return (\n    <>\n      <ButtonContainer>\n        <ExportReactCSV csvData={dataVuln} fileName=\"test\" />\n      </ButtonContainer>\n      <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\n        <TableContainer sx={{ maxHeight: \"440px\" }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell key=\"id\" align=\"center\" style={{ minWidth: 100 }}>\n                  ID\n                </TableCell>\n                <TableCell key=\"ip\" align=\"center\" style={{ minWidth: 90 }}>\n                  IP\n                </TableCell>\n                <TableCell key=\"cve\" align=\"center\" style={{ minWidth: 90 }}>\n                  CVE\n                </TableCell>\n                <TableCell key=\"cvss\" align=\"center\" style={{ minWidth: 90 }}>\n                  CVSS\n                </TableCell>\n                <TableCell key=\"tr\" align=\"center\" style={{ minWidth: 90 }}>\n                  TR\n                </TableCell>\n                <TableCell key=\"ep\" align=\"center\" style={{ minWidth: 90 }}>\n                  EP\n                </TableCell>\n                <TableCell key=\"poe\" align=\"center\" style={{ minWidth: 90 }}>\n                  POE\n                </TableCell>\n                <TableCell key=\"popI\" align=\"center\" style={{ minWidth: 90 }}>\n                  POP\n                </TableCell>\n                <TableCell key=\"pqt\" align=\"center\" style={{ minWidth: 90 }}>\n                  PQT\n                </TableCell>\n                <TableCell key=\"rf\" align=\"center\" style={{ minWidth: 90 }}>\n                  RISK FACTOR\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(\n                (\n                  { ip, cve, cvss, tr, ep, poe, popI, pqt, risk, name, id },\n                  index\n                ) => (\n                  <TableRow key={index + cve}>\n                    <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                      {id}\n                    </TableCell>\n                    <TableCell align=\"center\">{ip}</TableCell>\n                    <TableCell align=\"center\">{cve}</TableCell>\n                    <TableCell align=\"center\">{cvss}</TableCell>\n                    <TableCell align=\"center\">{tr}</TableCell>\n                    <TableCell align=\"center\">{ep}</TableCell>\n                    <TableCell align=\"center\">{poe}</TableCell>\n                    <TableCell align=\"center\">{popI}</TableCell>\n                    <TableCell align=\"center\">{pqt}</TableCell>\n                    <TableCell align=\"center\">{risk}</TableCell>\n                  </TableRow>\n                )\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    </>\n  );\n};\nexport default PriorityAtentionComponent;\n","import React, { useEffect, useState } from \"react\";\nimport DashboardComponent from \"../../Layouts/Dashboard/dashboard.component\";\nimport ShodanData from \"../../Layouts/ShodanData/shodan-data.component\";\nimport { ExtractData } from \"../../components/rest-api/extract-data.component\";\nimport HashLoader from \"react-spinners/HashLoader\";\n\nimport * as S from \"./main-page.styles\";\nimport PriorityAtentionComponent from \"../../Layouts/PriorityAtention/priority-atention.component\";\nimport {\n  averageOrganizationalRisk,\n  extractDataShow,\n  groupRepeatVariables,\n  sumData,\n} from \"../../util\";\nimport { Grid } from \"@material-ui/core\";\n\nconst MainPageComponent = () => {\n  //INFO ESPE\n  const [ips] = useState([\n    \"192.188.58.61\",\n    \"192.188.58.50\",\n    \"192.188.58.45\",\n    // \"190.15.135.10\", //No tiene vulnerabilidades\n    // \"192.188.58.32\", //No tiene vulnerabilidades\n    // \"192.188.58.40\", //No tiene vulnerabilidades\n    // \"192.188.58.47\", //No tiene vulnerabilidades\n    // \"192.188.58.70\", //No tiene vulnerabilidades\n    // \"192.188.58.99\", //No tiene vulnerabilidades\n    \"192.188.58.59\",\n    \"192.188.58.63\",\n    \"192.188.58.78\",\n    // \"192.188.58.76\", //No tiene vulnerabilidades\n    \"192.188.58.180\",\n    \"192.188.58.75\",\n  ]);\n  const orgName = \"Escuela Politecnica del Ejercito\";\n\n  // INFO UTE\n  // const [ips] = useState([\"192.188.51.24\", \"192.188.51.6\"]);\n  // const orgName = \"Universidad Tecnologica Equinoccial\";\n\n  //INFO EPN\n  // const [ips] = useState([\n  //   \"190.96.108.131\",\n  //   \"201.218.11.43\",\n  //   \"190.96.111.110\",\n  //   \"190.96.108.133\",\n  //   \"190.96.108.132\",\n  //   \"190.96.111.111\",\n  //   \"190.96.111.112\",\n  // ]);\n  // const orgName = \"Escuela Politecnica Nacional\";\n\n  const info = extractDataShow(ips.map((item) => ExtractData(item)));\n  const sum = info?.map((item) => item?.data?.length);\n  const total = sumData(sum);\n  const allCVSS = groupRepeatVariables(\n    info?.map((item) => item?.data?.map((data) => data.cvss * 1))\n  );\n  const AOR = averageOrganizationalRisk(sumData(allCVSS), total);\n  let years = groupRepeatVariables(\n    info.map((item) => item?.data?.map((item1) => item1?.cve?.substr(4, 4) * 1))\n  );\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  years = years?.map((item) => (currentYear - item) * 365);\n  const average = (sumData(years) / total).toFixed(2) * 1;\n  const colorRisk =\n    AOR > 0 && AOR <= 3.9\n      ? \"rgba(116, 238, 63)\"\n      : AOR > 3.9 && AOR <= 6.9\n      ? \"rgba(234, 231, 46)\"\n      : AOR > 6.9 && AOR <= 8.9\n      ? \"rgba(237, 45, 19)\"\n      : \"rgba(63, 62, 62)\";\n\n  //LOADING\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n    }, 10000);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <S.Loading>\n          <HashLoader size={100} color={\"#7ED321\"} loading={loading} />\n          <S.Message>Loading.....</S.Message>\n        </S.Loading>\n      ) : (\n        <S.Wrapper id=\"top\">\n          <S.Line />\n          <section id=\"gi\">\n            <S.Title>General Organization Information</S.Title>\n            <S.GridContainer container justifyContent=\"center\" spacing={3}>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Organization</S.Variable>\n                  <S.Description>{orgName}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Total vulnerabilities identified</S.Variable>\n                  <S.Description>{total}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Total IP scanned</S.Variable>\n                  <S.Description>{ips?.length}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Total IP with Vulnerabilities</S.Variable>\n                  <S.Description>{info?.length}</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainerRisk color={colorRisk}>\n                  <S.Variable\n                    color={colorRisk === \"rgba(63, 62, 62)\" ? \"white\" : \"black\"}\n                  >\n                    Average Organizational Risk (AOR)\n                  </S.Variable>\n                  <S.Description>{AOR}</S.Description>\n                  <S.Line />\n                </S.InfoContainerRisk>\n              </Grid>\n              <Grid item md={4}>\n                <S.InfoContainer>\n                  <S.Variable>Average Vulnerability Time (AVT)</S.Variable>\n                  <S.Description>{average} days</S.Description>\n                  <S.Line />\n                </S.InfoContainer>\n              </Grid>\n            </S.GridContainer>\n          </section>\n          <section id=\"vi\">\n            <S.Line />\n            <S.Title>General Vulnerability Information</S.Title>\n            <DashboardComponent info={info} />\n          </section>\n          <section id=\"db\">\n            <S.Line />\n            <S.Title>IP Banner and Detailed Vulnerabilities</S.Title>\n            <ShodanData info={info} />\n          </section>\n          <section id=\"pt\">\n            <S.Line />\n            <S.Title>Vulnerability Prioritization</S.Title>\n            <S.Line />\n            <S.Title>Description of Environmental Variables</S.Title>\n            <S.GridContainer container justifyContent=\"center\" spacing={3}>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>CVE: </strong> Common Vulnerabilities and Exposures\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>CVSS: </strong> Common Vulnerability Scoring System\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>TR: </strong> Total References\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>EP: </strong> Exploitation Probability\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>POE: </strong> Probability of Occurrence of an Event\n                  in the IP\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>POP: </strong> Probability of Open Ports\n                </S.DescriptionVariables>\n              </Grid>\n              <Grid item md={4}>\n                <S.DescriptionVariables>\n                  <strong>PQT: </strong> Probability for Query Tags\n                </S.DescriptionVariables>\n              </Grid>\n            </S.GridContainer>\n            <S.Line />\n            <S.Title>Prioritization Table</S.Title>\n            <S.Line />\n            <PriorityAtentionComponent info={info} />\n          </section>\n        </S.Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default MainPageComponent;\n","import { useEffect, useState } from \"react\";\r\nimport { extractVulns } from \"../../util\";\r\n\r\nexport const ExtractData = (ip) => {\r\n  const [vuln, setVuln] = useState([]);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const apiKey = process.env.REACT_APP_SHODAN_API_KEY;\r\n    const url = \"https://api.shodan.io/shodan/host/\" + ip + \"?key=\" + apiKey;\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          // setIsLoaded(true);\r\n          if (typeof result.vulns != \"undefined\") {\r\n            setVuln(result);\r\n            const local = extractVulns(result.data, result.vulns);\r\n            setData(local);\r\n          }\r\n        },\r\n        // Nota: es importante manejar errores aquí y no en\r\n        // un bloque catch() para que no interceptemos errores\r\n        // de errores reales en los componentes.\r\n        (error) => {\r\n          // setIsLoaded(true);\r\n          console.log(error);\r\n        }\r\n      );\r\n  }, [ip]);\r\n  return { vuln, data };\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Container, AppBar } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\n\r\nexport const Header = styled(AppBar)`\r\n  padding-top: 1em;\r\n  padding-bottom: 1em;\r\n  background-color: white !important;\r\n`;\r\n\r\nexport const Wrapper = styled(Container)`\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const Navigation = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const CustomLinkNav = styled(Link)`\r\n  color: black !important;\r\n  text-transform: uppercase;\r\n  font-size: 1em;\r\n  text-align: center;\r\n\r\n  &:hover {\r\n    border-bottom: 3px solid green;\r\n  }\r\n`;\r\nexport const ImageContainer = styled(Link)``;\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  height: 55px;\r\n`;\r\n","import React from \"react\";\n\nimport * as S from \"./header.styles.jsx\";\n\nconst Header = () => {\n  return (\n    <S.Header>\n      <S.Wrapper>\n        <S.Navigation>\n          <S.ImageContainer to=\"top\" spy={true} smooth={true}>\n            <S.Image\n              src=\"https://www.espe.edu.ec/wp-content/uploads/2018/11/espe.png\"\n              alt=\"logo\"\n            />\n          </S.ImageContainer>\n\n          <S.CustomLinkNav to=\"gi\" spy={true} smooth={true}>\n            General Information\n          </S.CustomLinkNav>\n          <S.CustomLinkNav to=\"vi\" spy={true} smooth={true}>\n            Vulnerability Information\n          </S.CustomLinkNav>\n          <S.CustomLinkNav to=\"db\" spy={true} smooth={true}>\n            Detailed Banners\n          </S.CustomLinkNav>\n          <S.CustomLinkNav to=\"pt\" spy={true} smooth={true}>\n            Prioritization Table\n          </S.CustomLinkNav>\n        </S.Navigation>\n      </S.Wrapper>\n    </S.Header>\n  );\n};\nexport default Header;\n","import styled from \"styled-components\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport const Footer = styled.footer`\r\n  border-top: 5px solid green;\r\n`;\r\nexport const Wrapper = styled(Container)``;\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 200px;\r\n  height: 55px;\r\n`;\r\nexport const Description = styled.p`\r\n  max-width: 300px;\r\n`;\r\n","import React from \"react\";\r\nimport * as S from \"./footer.styles\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <S.Footer>\r\n      <S.Wrapper>\r\n        <S.Content>\r\n          <S.Image\r\n            src=\"https://www.espe.edu.ec/wp-content/uploads/2018/11/espe.png\"\r\n            alt=\"logo\"\r\n          />\r\n          <S.Description>\r\n            <strong>PROJECT NAME.</strong> <br />\r\n            Design and Implementation of the IT infrastructure and service\r\n            management system for the ESPE Academic CERT\r\n          </S.Description>\r\n          <S.Description>\r\n            <strong>© 2021 PIC-2020-ESPE-CERT.</strong> <br />\r\n            Todos los derechos reservados.\r\n          </S.Description>\r\n        </S.Content>\r\n      </S.Wrapper>\r\n    </S.Footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import MainPageComponent from \"./Pages/MainPage/main-page.component\";\r\nimport Header from \"./components/header/header.component\";\r\nimport Footer from \"./components/footer/footer.component\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <MainPageComponent />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}